@model ContatoModel
@{
    ViewData["Title"] = "Editar contato";
}

<div class="text-center mb-4">
    <h1 class="display-4">Editar contato</h1>
</div>

@if (TempData["MensagemSucesso"] != null)
    {
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        @TempData["MensagemSucesso"]
    </div>
    }
@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        @TempData["MensagemErro"]
    </div>
}

<form asp-controller="Contato" asp-action="Alterar" method="post">

    <input type="hidden" asp-for="Id"/>
    <div class="form-group mb-3">
        <label for="nome">Nome</label>
        <input type="text" asp-for=Nome class="form-control" placeholder="Digite o nome do contato">
        @Html.ValidationMessageFor(x => x.Nome)
    </div>

    <div class="form-group mb-3">
        <label for="email">Email</label>
        <input type="email" asp-for=Email class="form-control" placeholder="Digite o Email do contato">
        @Html.ValidationMessageFor(x => x.Email)    
    </div>

    <div class="form-group mb-3">
        <label for="celular">Celular</label>
        <input type="text" asp-for=Celular class="form-control" placeholder="Digite o celular do contato">
        @Html.ValidationMessageFor(x => x.Celular)
    </div>

    <!-- Botões em bloco -->
    <div class="d-flex flex-column">
        <button type="submit" class="btn btn-primary w-100 mb-2">Alterar</button>
        <a class="btn btn-secondary w-100" role="button" asp-controller="Contato" asp-action="Index">Voltar</a>
    </div>

</form>
